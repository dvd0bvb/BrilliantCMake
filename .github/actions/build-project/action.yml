name: Build Project
description: Build a CMake project
author: David Brill (dvd0bvb)
inputs:
  c-compiler:
    description: The C compiler being used
    required: true
  cpp-compiler:
    description: The CXX compiler being used
    required: true
  build-type:
    description: Build type
    required: true
  cmake-config-args:
    description: Additional arguments for Cmake config step
    required: false
  use-libcxx:
    description: Build against libc++
    required: false
    default: false
  libcxx-version:
    description: Libc++ version to build against. Adds appropriate BRILLIANT_CMAKE options
    required: false
    default: 18.1.3
  sanitizer:
    description: Sanitizer to build with one of [ASAN, TSAN, MSAN] if specified 
    required: false
  coverage:
    description: Configure build with code coverage
    required: false
    default: false
runs:
  using: "composite"  
  steps:
    - id: constants
      uses: ./.github/actions/project-constants

    - name: Use libc++ for Clang
      if: ${{ inputs.use-libcxx == 'true' }}
      uses: dvd0bvb/install-libcxx@v1
      with:
        libcxx_version: ${{ inputs.libcxx-version }}
        msan: ${{ inputs.sanitizer == 'MSAN' }}

    - name: Install gtest
      if: ${{ inputs.use-libcxx == 'true' }}
      uses: dvd0bvb/install-gtest@v1
      with:
        gtest_version: 1.14.0
        libcxx_version: 18.1.3
        msan: ${{ inputs.sanitizer == 'MSAN' }}

    - name: Install gtest 
      if: ${{ inputs.use-libcxx == 'false' }}
      uses: ./.github/actions/install-gtest
      with:
        tag: v1.14.0
        build-type: Release
        dynamic-msvc-runtime: true
    
    - uses: ./.github/actions/config-cmake
      with: 
        cpp-compiler: ${{ inputs.cpp-compiler }}
        c-compiler: ${{ inputs.c-compiler }}
        build-type: ${{ inputs.build-type }}
        use-libcxx: ${{ inputs.use-libcxx }}
        sanitizer: ${{ inputs.sanitizer }}
        coverage: ${{ inputs.coverage }}

    - name: Build
      run: > 
        cmake --build build 
        --config ${{ inputs.build-type }} 
        --target ${{ steps.constants.outputs.project-name }}_TEST
      shell: bash

    - name: Test
      working-directory: build/test
      run: ctest --build-config ${{ inputs.build-type }} --no-tests=error
      shell: bash 