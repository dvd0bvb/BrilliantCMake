name: Code Coverage

on:
  push:
    branches: [ "main" ]
    paths-ignore: 
      - .github/badges/**
      - README.md
  pull_request:
    branches: [ "main" ]
    paths-ignore: 
      - .github/badges/**
      - README.md

jobs:
  code_coverage:
    runs-on: ubuntu-24.04
    steps:
    - name: Install LCOV
      run: sudo apt update && sudo apt install lcov

    - uses: actions/checkout@v4
    - uses: ./.github/actions/project-constants
      id: constants
    - uses: ./.github/actions/build-project
      with: 
        c-compiler: gcc
        cpp-compiler: g++
        build-type: Debug
        coverage: true
    
    - name: Run LCOV
      working-directory: ${{ github.workspace }} 
      run: |
        lcov -d build/src/CMakeFiles/${{ steps.constants.outputs.project-name }}.dir -c -o build/coverage.info --branch-coverage
        genhtml build/coverage.info -o docs/coverage --branch-coverage

    - uses: ./.github/actions/parse-coverage
      id: stats
      with:
        lcov-file: ${{ github.workspace }}/build/coverage.info

    - working-directory: ${{ github.workspace }}
      run: |
        min_number() {
          printf "%s\n" "$@" | sort -g | head -n1
        }

        COLORS_JSON=.github/badges/colors.json
        OUT_FILE=.github/badges/coverage.json
        LINES=${{ steps.stats.outputs.line-percent }}
        FUNCTIONS=${{ steps.stats.outputs.function-percent }}
        BRANCHES=${{ steps.stats.outputs.branch-percent }}

        MIN=$(min_number $LINES $FUNCTIONS $BRANCHES)
        if [[ $((MIN < 85)) ]]; then 
          COLOR_NAME=critical
        elif [[ $((MIN < 95)) ]]; then
          COLOR_NAME=warning
        else
          COLOR_NAME=good
        fi
        COLOR="$(jq .$COLOR_NAME $COLORS_JSON)"
        MESSAGE="L: $LINES F: $FUNCTIONS B: $BRANCHES"

        jq ".color = $COLOR | .message = \"$MESSAGE\"" $OUT_FILE > json.tmp
        mv json.tmp $OUT_FILE

    - uses: oleksiyrudenko/gha-git-credentials@v2-latest
      with:
        token: ${{ github.token }}

    - name: Push coverage badge to github
      shell: bash
      continue-on-error: true
      run: |
        RESULT=$(git diff .github/badges/coverage.json)
        if [ ! -z "$RESULT" ]; then
          git commit .github/badges/coverage.json -m '[skip ci] updated coverage json from CI action'
          git push
        fi